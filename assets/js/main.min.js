!function($) {
    var settings = {
        keyboardShortcuts: {
            enabled: !0,
            distance: 50
        },
        scrollWheel: {
            enabled: !0,
            factor: 1
        },
        scrollZones: {
            enabled: !0,
            speed: 15
        },
        dragging: {
            enabled: !0,
            momentum: .875,
            threshold: 10
        },
        excludeSelector: "input:focus, select:focus, textarea:focus, audio, video, iframe",
        linkScrollSpeed: 1e3
    };
    skel.breakpoints({
        xlarge: "(max-width: 1680px)",
        large: "(max-width: 1280px)",
        medium: "(max-width: 980px)",
        small: "(max-width: 736px)",
        xsmall: "(max-width: 480px)",
        xxsmall: "(max-width: 360px)",
        short: "(min-aspect-ratio: 16/7)",
        xshort: "(min-aspect-ratio: 16/6)"
    }), $(function() {
        var $window = $(window), $document = $(document), $body = $("body"), $html = $("html"), $bodyHtml = $("body,html"), $wrapper = $("#wrapper");
        skel.vars.mobile && (settings.keyboardShortcuts.enabled = !1, settings.scrollWheel.enabled = !1, 
        settings.scrollZones.enabled = !1, settings.dragging.enabled = !1, $body.css("overflow-x", "auto")), 
        "ie" == skel.vars.browser && ($body.addClass("is-ie"), $window.on("load resize", function() {
            var w = 0;
            $wrapper.children().each(function() {
                w += $(this).width();
            }), $html.css("width", w + "px");
        })), skel.canUse("object-fit") || $(".image[data-position]").each(function() {
            var $this = $(this), $img = $this.children("img");
            $this.css("background-image", 'url("' + $img.attr("src") + '")').css("background-position", $this.data("position")).css("background-size", "cover").css("background-repeat", "no-repeat"), 
            $img.css("opacity", "0");
        }), settings.keyboardShortcuts.enabled && function() {
            $wrapper.on("keypress keyup keydown", settings.excludeSelector, function(event) {
                event.stopPropagation();
            }), $window.on("keydown", function(event) {
                var scrolled = !1;
                switch (event.keyCode) {
                  case 37:
                    $document.scrollLeft($document.scrollLeft() - settings.keyboardShortcuts.distance), 
                    scrolled = !0;
                    break;

                  case 39:
                    $document.scrollLeft($document.scrollLeft() + settings.keyboardShortcuts.distance), 
                    scrolled = !0;
                    break;

                  case 33:
                    $document.scrollLeft($document.scrollLeft() - $window.width() + 100), scrolled = !0;
                    break;

                  case 34:
                  case 32:
                    $document.scrollLeft($document.scrollLeft() + $window.width() - 100), scrolled = !0;
                    break;

                  case 36:
                    $document.scrollLeft(0), scrolled = !0;
                    break;

                  case 35:
                    $document.scrollLeft($document.width()), scrolled = !0;
                }
                scrolled && (event.preventDefault(), event.stopPropagation(), $bodyHtml.stop());
            });
        }(), settings.scrollWheel.enabled && function() {
            var normalizeWheel = function(event) {
                var sX = 0, sY = 0, pX = 0, pY = 0;
                return "detail" in event ? sY = event.detail : "wheelDelta" in event ? sY = event.wheelDelta / -120 : "wheelDeltaY" in event && (sY = event.wheelDeltaY / -120), 
                "wheelDeltaX" in event && (sX = event.wheelDeltaX / -120), "axis" in event && event.axis === event.HORIZONTAL_AXIS && (sX = sY, 
                sY = 0), pX = 10 * sX, pY = 10 * sY, "deltaY" in event && (pY = event.deltaY), "deltaX" in event && (pX = event.deltaX), 
                (pX || pY) && event.deltaMode && (1 == event.deltaMode ? (pX *= 40, pY *= 40) : (pX *= 800, 
                pY *= 800)), pX && !sX && (sX = pX < 1 ? -1 : 1), pY && !sY && (sY = pY < 1 ? -1 : 1), 
                {
                    spinX: sX,
                    spinY: sY,
                    pixelX: pX,
                    pixelY: pY
                };
            };
            $body.on("wheel", function(event) {
                if (!skel.breakpoint("small").active) {
                    event.preventDefault(), event.stopPropagation(), $bodyHtml.stop();
                    var n = normalizeWheel(event.originalEvent), x = 0 != n.pixelX ? n.pixelX : n.pixelY, delta = Math.min(Math.abs(x), 150) * settings.scrollWheel.factor, direction = x > 0 ? 1 : -1;
                    $document.scrollLeft($document.scrollLeft() + delta * direction);
                }
            });
        }(), settings.scrollZones.enabled && function() {
            var direction, $left = $('<div class="scrollZone left"></div>'), $right = $('<div class="scrollZone right"></div>'), paused = !1, intervalId = null, activate = function(d) {
                skel.breakpoint("small").active || paused || ($bodyHtml.stop(), direction = d, clearInterval(intervalId), 
                intervalId = setInterval(function() {
                    $document.scrollLeft($document.scrollLeft() + settings.scrollZones.speed * direction);
                }, 25));
            }, deactivate = function() {
                paused = !1, clearInterval(intervalId);
            };
            $left.add($right).appendTo($wrapper).on("mouseleave mousedown", function(event) {
                deactivate();
            }), $left.css("left", "0").on("mouseenter", function(event) {
                activate(-1);
            }), $right.css("right", "0").on("mouseenter", function(event) {
                activate(1);
            }), $wrapper.on("---pauseScrollZone", function(event) {
                paused = !0, setTimeout(function() {
                    paused = !1;
                }, 500);
            });
        }(), settings.dragging.enabled && function() {
            var startScroll, momentumIntervalId, velocityIntervalId, startX, currentX, previousX, velocity, direction, dragging = !1, dragged = !1, distance = 0;
            $wrapper.on("mouseup mousemove mousedown", ".image, img", function(event) {
                event.preventDefault();
            }).on("mouseup mousemove mousedown", settings.excludeSelector, function(event) {
                event.stopPropagation(), dragging = !1, $wrapper.removeClass("is-dragging"), clearInterval(velocityIntervalId), 
                clearInterval(momentumIntervalId), $wrapper.triggerHandler("---pauseScrollZone");
            }).on("mousedown", function(event) {
                skel.breakpoint("small").active || (clearInterval(momentumIntervalId), $bodyHtml.stop(), 
                dragging = !0, $wrapper.addClass("is-dragging"), startScroll = $document.scrollLeft(), 
                startX = event.clientX, previousX = startX, currentX = startX, distance = 0, direction = 0, 
                clearInterval(velocityIntervalId), velocityIntervalId = setInterval(function() {
                    velocity = Math.abs(currentX - previousX), direction = currentX > previousX ? -1 : 1, 
                    previousX = currentX;
                }, 50));
            }).on("mousemove", function(event) {
                dragging && (currentX = event.clientX, $document.scrollLeft(startScroll + (startX - currentX)), 
                distance = Math.abs(startScroll - $document.scrollLeft()), !dragged && distance > settings.dragging.threshold && ($wrapper.addClass("is-dragged"), 
                dragged = !0));
            }).on("mouseup mouseleave", function(event) {
                var m;
                dragging && (dragged && (setTimeout(function() {
                    $wrapper.removeClass("is-dragged");
                }, 100), dragged = !1), distance > settings.dragging.threshold && event.preventDefault(), 
                dragging = !1, $wrapper.removeClass("is-dragging"), clearInterval(velocityIntervalId), 
                clearInterval(momentumIntervalId), $wrapper.triggerHandler("---pauseScrollZone"), 
                settings.dragging.momentum > 0 && (m = velocity, momentumIntervalId = setInterval(function() {
                    $document.scrollLeft($document.scrollLeft() + m * direction), m *= settings.dragging.momentum, 
                    Math.abs(m) < 1 && clearInterval(momentumIntervalId);
                }, 15)));
            });
        }(), $wrapper.on("mousedown mouseup", 'a[href^="#"]', function(event) {
            event.stopPropagation();
        }).on("click", 'a[href^="#"]', function(event) {
            var $target, y, href = $(this).attr("href");
            "#" != href && 0 != ($target = $(href)).length && (event.preventDefault(), event.stopPropagation(), 
            y = skel.breakpoint("small").active ? {
                scrollTop: $target.offset().top - Math.max(0, $window.height() - $target.outerHeight()) / 2
            } : {
                scrollLeft: $target.offset().left - Math.max(0, $window.width() - $target.outerWidth()) / 2
            }, $bodyHtml.stop().animate(y, settings.linkScrollSpeed, "swing"));
        }), $(".gallery").on("click", "a", function(event) {
            var $a = $(this), $modal = $a.parents(".gallery").children(".modal"), $modalImg = $modal.find("img"), href = $a.attr("href");
            href.match(/\.(jpg|gif|png|mp4)$/) && (event.preventDefault(), event.stopPropagation(), 
            $modal[0]._locked || ($modal[0]._locked = !0, $modalImg.attr("src", href), $modal.addClass("visible"), 
            $modal.focus(), setTimeout(function() {
                $modal[0]._locked = !1;
            }, 600)));
        }).on("click", ".modal", function(event) {
            var $modal = $(this), $modalImg = $modal.find("img");
            $modal[0]._locked || $modal.hasClass("visible") && (event.stopPropagation(), $modal[0]._locked = !0, 
            $modal.removeClass("loaded"), setTimeout(function() {
                $modal.removeClass("visible"), $wrapper.triggerHandler("---pauseScrollZone"), setTimeout(function() {
                    $modalImg.attr("src", ""), $modal[0]._locked = !1, $body.focus();
                }, 475);
            }, 125));
        }).on("keypress", ".modal", function(event) {
            var $modal = $(this);
            27 == event.keyCode && $modal.trigger("click");
        }).on("mouseup mousedown mousemove", ".modal", function(event) {
            event.stopPropagation();
        }).prepend('<div class="modal" tabIndex="-1"><div class="inner"><img src="" /></div></div>').find("img").on("load", function(event) {
            var $modal = $(this).parents(".modal");
            setTimeout(function() {
                $modal.hasClass("visible") && $modal.addClass("loaded");
            }, 275);
        });
    });
}(jQuery);